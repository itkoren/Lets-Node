[{
  "steps": [
    [{
      "name": "h2",
      "value": "Shall We Node?"
    }, {
      "name": "iframe",
      "attributes": {
        "src": "https://docs.google.com/a/liveperson.com/file/d/0B84kScR8zJcfcGdpWWVSSmxoaEE/preview",
        "width": "640",
        "height": "385",
        "style": "width: 805px; height: 473px; max-height: none; max-width: none;"
      }
    }],
    [{
      "name": "img",
      "attributes": {
        "src": "https://cloud.githubusercontent.com/assets/3624786/2687144/0b5d4846-c239-11e3-86e4-7f56d6908fd3.jpg",
        "style": "width: 463px; height: 518px; max-height: none; max-width: none;"
      }
    }]
  ]
}, {
  "steps": [
    [{
      "name": "p",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2684659/2b1db378-c1bc-11e3-930e-6ba839d6cfd8.png",
          "style": "width: 359px; height: 123px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 559px; top: 86px;",
          "class": "absolute-element"
        }
      }]
    }, {
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 586px; height: 65px; z-index: 4; left: 217px; top: 287px;"
      },
      "value": "And than was Node"
    }],
    [{
      "name": "h2",
      "value": "What is it?"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Platform for Creating Lightweight, Fast, Scalable, Event-Driven and Non-Blocking I/O Applications"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Created by Ryan Dahl in 2009"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Initially Solving Files Upload Process Problem (Flickr)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Based on V8 - Google's Chrome Javascript Engine"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "Implements the Reactor Pattern using A Single Thread Event Loop"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "Inspired by Ruby's Mongrel Web Server"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "Sponsored by Joyent"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "7"
          },
          "value": "Although it is quite young, Node is very popular. <a href=\"https://github.com/search?o=desc&amp;q=stars%3A%3E1&amp;s=stars&amp;type=Repositories\">see</a>"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "8"
          },
          "value": "Currently Treated to be the Hotest Thing in Town"
        }]
      }]
    }, {
      "name": "notes",
      "value": "Dahl used to work for Joyent when he started to develop Node"
    }],
    [{
      "name": "h2",
      "value": "Under the Hood"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 550px; height: 546px; z-index: 4; left: 318px; top: 100px;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Google V8 (C++)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "libeio - asynchronous version of the POSIX API with POSIX threads"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "libev - event loop"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "c-ares - asynchronous DNS resolver"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "OpenSSL - crypto"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "evcom - stream socket library on top of libev"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "http-parser - dealing with HTTP"
        }]
      }]
    }, {
      "name": "img",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0",
        "src": "https://cloud.githubusercontent.com/assets/3624786/2684661/2b1fcd02-c1bc-11e3-9458-2199a0f45982.png",
        "style": "position: absolute; width: 279px; height: 258px; z-index: 6; left: 2px; top: 100px; max-height: none; max-width: none;"
      }
    }],
    [{
      "name": "h2",
      "value": "Under The Hood (cont'd)"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 550px; height: 5466px; z-index: 4; left: 318px; top: 100px;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "libev &amp; libeio ran only on Linux/Unix"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Windows kernel event notification and async I/O mechanisms is IOCP (Input/output completion port)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "<a href=\"https://github.com/joyent/libuv\">libuv</a> replaces libeio, libev &amp; c-ares"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "In the node-v0.9.0 version of libuv, libev was removed"
        }]
      }]
    }, {
      "name": "img",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "3",
        "src": "https://cloud.githubusercontent.com/assets/3624786/2684693/bea8cb6e-c1bc-11e3-9b3b-a4142367e03c.png",
        "style": "color: rgb(0, 0, 0); width: 293px; height: 220px; max-height: none; max-width: none; position: absolute; z-index: 4; left: -12px; top: 100px;"
      }
    }, {
      "name": "notes",
      "value": "On Windows Async IO is implemented using IOCP - I/O Completion Ports"
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 536px; height: 47px; z-index: 4; left: 211px; top: 130px;"
      },
      "value": "Did you say OpenSSL?!?!"
    }, {
      "name": "h2",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 856px; height: 65px; z-index: 4; left: 58px; top: 264px;"
      },
      "value": "What about Heartbleed!?!?!?"
    }, {
      "name": "h1",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 896px; height: 115px; z-index: 4; left: 23px; top: 411px;"
      },
      "value": [{
        "name": "a",
        "attributes": {
          "href": "https://github.com/joyent/node/commit/28c6e42e"
        },
        "value": "No Worries Guys"
      }]
    }, {
      "name": "notes",
      "value": [
        "Heartbleed was found in the heartbeat extention of OpenSSL",
        "This extention is not supported on IIS servers and therefor had been disabled in Node core over a year ago",
        "This means that server with Node version &gt; 0.10.10 does not suffer from heartbleed"
      ]
    }],
    [{
      "name": "h2",
      "value": "Why Javascript?"
    }, {
      "name": "img",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0",
        "src": "https://cloud.githubusercontent.com/assets/3624786/2684720/061272b6-c1bd-11e3-8433-60fcb0e93472.jpg",
        "style": "width: 659px; height: 496px; max-height: none; max-width: none;"
      }
    }],
    [{
      "name": "h2",
      "value": "But Why Javascript?"
    }, {
      "name": "blockquate",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 966px; height: 241px; z-index: 4; left: -4px; top: 111px; max-height: none; max-width: none;"
      },
      "value": "\"JavaScript has certain characteristics that make it very different than other dynamic languages, namely that it has no concept of threads. Its model of concurrency is completely based around events.\" - Ryan Dahl"
    }, {
      "name": "div",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 563.6382623224729px; height: 274px; z-index: 4; left: 413px; top: 280px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2684660/2b1e8dc0-c1bc-11e3-85bf-517da83a70de.jpeg",
          "style": "width: 385px; height: 253px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "h2",
      "value": "Benefits of Using Javascript in the Server"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Reuse developers @client side &amp; @server side (Javascript is the most popular programming language today)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Ability to share code between client and server and get the ideal optimization"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Easily unifies the data formats (JSON is native in Javascript)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "NoSql databases have wide support for Javascript interfaces"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "Not a New Idea"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Netscape offered SSJS in 1996"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Rhino is also around since 1997"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "So why didn't it fly than?"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 919px; height: 230px; z-index: 4; left: 32px; top: 101px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "SSJS was a page template system (like JSP/ASP) to write data to the output stream"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "It had all the disadvantages of other page template systems + really slow JS engine"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Rhino is an engine which converts JS into java classes"
        }]
      }]
    }, {
      "name": "h2",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "3",
        "style": "position: absolute; width: 316px; height: 65px; z-index: 4; left: 305px; top: 337px;"
      },
      "value": "And Today"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 904px; height: 276px; z-index: 4; left: 28px; top: 411px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment absolute-element",
            "data-fragment-index": "4"
          },
          "value": "Javascript engines are very <a href=\"http://bellard.org/jslinux/\">fast</a>"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment absolute-element",
            "data-fragment-index": "5"
          },
          "value": "Javascript was designed to be used in the browser so it is naturally good for event based programming"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment absolute-element",
            "data-fragment-index": "6"
          },
          "value": "Node leverages this Javascript strength to create a convenient environment for working in the non-blocking, event-driven I/O paradigm"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "jslinux demo:",
        "  uname -a",
        "  ls",
        "  cat hello.c",
        "  tcc -v -bench -o hello hello.c",
        "  ./hello",
        "  dmesg | more"
      ]
    }],
    [{
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 873px; height: 145px; z-index: 4; left: 49px; top: 244px; max-height: none; max-width: none;"
      },
      "value": "Node is so successful that it is not alone"
    }],
    [{
      "name": "h2",
      "value": "Similar Environments"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "EventMachine for Ruby"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Tornado and Twisted for Python"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Perl Object Environment for Perl"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Vert.x for Java, JavaScript, Groovy, Python and Ruby"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "++"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "Historical Summary"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "2009 - Ryan Dahl, JSConf EU, Joyent"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "2010 - v0.2 \"stable-ish\""
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "2/2011 - v0.4 \"stuff works on linux\""
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "11/2011 - v0.6 \"stuff works on windows\""
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "6/2012 - v0.8 \"stuff works better\""
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "3/2013 - v0.10 \"stuff works really really good\""
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "today - v0.10.26 \"heaven :)\""
        }]
      }]
    }]
  ]
}, {
  "steps": [
    [{
      "name": "img",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0",
        "src": "https://cloud.githubusercontent.com/assets/3624786/2685150/feb2ad8a-c1c4-11e3-9d3b-4a297a1dac34.jpg",
        "style": "font-size: 65px; color: rgb(0, 0, 0); position: absolute; max-height: none; max-width: none; width: 312px; height: 465px; z-index: 4; left: 587px; top: 97px;"
      }
    }, {
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 471px; height: 65px; z-index: 4; left: 83px; top: 294px;"
      },
      "value": "Is Node Better?"
    }],
    [{
      "name": "h2",
      "value": "Waiting..."
    }, {
      "name": "h3",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 966px; height: 40px; z-index: 4; left: -4px; top: 100px;"
      },
      "value": "Most of the traditional Servers spend a lot of time waiting for I/O operations"
    }, {
      "name": "div",
      "attributes": {
        "style": "position: absolute; width: 506px; height: 141px; z-index: 4; left: 432px; top: 215px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Reading a file"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Accessing an external web service"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "File uploading"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "Database access"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "++"
        }]
      }]
    }, {
      "name": "div",
      "attributes": {
        "style": "position: absolute; width: 966px; height: 61px; z-index: 4; left: -4px; top: 515px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "In memory operations are much faster"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "7"
          },
          "value": "Using the traditional thread-per-connection model is expensive"
        }]
      }]
    }, {
      "name": "div",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "6",
        "style": "position: absolute; width: 442px; height: 320px; z-index: 4; left: -8px; top: 215px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2685174/b36ecb28-c1c5-11e3-9c08-8da745c414fb.png",
          "style": "width: 403px; height: 285px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "img",
      "attributes": {
        "src": "https://cloud.githubusercontent.com/assets/3624786/2686862/55e7f808-c224-11e3-91af-205e685eaa9a.jpg",
        "class": "absolute-element",
        "style": "position: absolute; max-height: none; max-width: none; width: 246px; height: 176px; z-index: 4; left: 2px; top: 194px;"
      }
    }, {
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 760px; height: 140px; z-index: 4; left: 170px; top: 100px; max-height: none; max-width: none;"
      },
      "value": "But Node is not a silver-bullet new platform that will dominate the web development world."
    }, {
      "name": "h3",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 585px; height: 93px; z-index: 4; left: 224px; top: 344px; max-height: none; max-width: none;"
      },
      "value": "Instead, it's a platform that fills a particular need"
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 573px; height: 47px; z-index: 4; left: 295px; top: 156px;"
      },
      "value": "Node is designed for DIRT"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 241px; height: 325px; z-index: 4; left: 47px; top: 18px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2686938/aba7d67c-c22a-11e3-91fc-f50bbae8323a.jpg"
        }
      }]
    }, {
      "name": "h3",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 702px; height: 47px; z-index: 4; left: 143px; top: 360px;"
      },
      "value": "DIRT - Data Intensive Real-Time"
    }],
    [{
      "name": "p",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 92px; z-index: 4; left: -11px; top: 102px;"
      },
      "value": "Node really shines in building fast, scalable network &amp; I/O applications,"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 966px; height: 92px; z-index: 4; left: -2px; top: 289px;"
      },
      "value": "as it's capable of handling a huge number of simultaneous connections with high throughput,"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 501px; height: 46px; z-index: 4; left: 233px; top: 477px;"
      },
      "value": "which equates to high scalability"
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 94px; z-index: 4; left: 1px; top: 272px;"
      },
      "value": "You definitely don't want to use Node for CPU-intensive operations"
    }],
    [{
      "name": "h2",
      "value": "So what can we do with It?"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Realtime Chat"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Realtime monitoring"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Realtime collaboration"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Realtime Stocks Trading info"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "Data Streaming (audio/video/games)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "Proxies / API serving"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "What shouldn't we?"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "CPU / Computation intensive operations"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Blocking operations"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Long running iterations"
        }]
      }]
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 94px; z-index: 4; left: -2px; top: 247px;"
      },
      "value": "A good example for a DIRTy application written with Node is <a href=\"https://browserling.com/\">Browserling</a>"
    }]
  ]
}, {
  "steps": [
    [{
      "name": "img",
      "attributes": {
        "src": "https://cloud.githubusercontent.com/assets/3624786/2687139/e7f9d7e4-c237-11e3-96cc-2f324e8ef61c.jpg",
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; max-height: none; max-width: none; width: 587px; height: 294px; z-index: 4; left: 310px; top: 327px;"
      }
    }, {
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 443px; height: 65px; z-index: 4; left: 118px; top: 214px;"
      },
      "value": "Reactor Model"
    }],
    [{
      "name": "h2",
      "value": "I/O is Expensive"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "img",
      "attributes": {
        "src": "https://cloud.githubusercontent.com/assets/3624786/2687159/e161edf6-c23a-11e3-8ffa-c68c815451ca.png"
      }
    }],
    [{
      "name": "h2",
      "value": "Possible ways to deal with I/O"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Synchronous - One at a time, first come first serve"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "1"
            },
            "value": "Pros: Simple"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "2"
            },
            "value": "Cons: One request can hold up all others"
          }]
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Fork - Create a new process to handle each request"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "4"
            },
            "value": "Pros: Easy"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "5"
            },
            "value": "Cons: Does not scale well"
          }]
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "Threads - Start a new thread to handle each request"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "7"
            },
            "value": "Pros: Easy and more kernel friendly (than fork)"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "8"
            },
            "value": "Cons: Gets complicated fast, concurrency issues and reliability hazards (race conditions &amp; Mutual exclusion &amp; dead locks)"
          }]
        }]
      }]
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 820px; height: 141px; z-index: 4; left: 65px; top: 239px; max-height: none; max-width: none;"
      },
      "value": "Fork &amp; Threads are memory expensive because threads and processes carry a heavy memory cost"
    }],
    [{
      "name": "h2",
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2687065/373c4dc4-c232-11e3-896a-0fd5c22c8e71.jpeg",
          "style": "width: 827px; height: 552px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "h2",
      "value": "Solution:"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 129px; z-index: 4; left: 3px; top: 253px;"
      },
      "value": "Reactor Pattern based on a single thread"
    }],
    [{
      "name": "h2",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0"
      },
      "value": "Reactor Pattern"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 312px; height: 385px; z-index: 4; left: 6px; top: 137px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2687063/3730ffdc-c232-11e3-83d4-ae04c3f0f490.PNG"
        }
      }]
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 627px; height: 384px; z-index: 4; left: 305px; top: 137px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Defined by <a href=\"http://en.wikipedia.org/wiki/Douglas_C._Schmidt\">Doug C. Schmidt</a> in 1995"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Pattern for creating scalable network servers"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Alternative for thread-per-connection model"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Usually implemented using a single threaded event loop which dispatches events on handles to events handlers"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "Doug Schmidt is a computer scientist and author in the fields of object-oriented programming, distributed computing and design patterns",
        "A Proffessor @ vanderbilt University &amp; @ University of California",
        "You can also find him at Coursera"
      ]
    }],
    [{
      "name": "h2",
      "value": "Actors"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 500px; height: 326.2915622389307px; z-index: 4; left: -12px; top: 88px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2687064/3738ada4-c232-11e3-8e2e-de21bd83dfea.jpg"
        }
      }]
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 474px; height: 596px; z-index: 4; left: 469px; top: 91px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Handles - identify resources managed by an OS"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Reactor - defines an interface for registering, removing, and dispatching Event Handler objects"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Event Handler - specifies an interface used by the Reactor to dispatch callback methods"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Concrete Event Handler - implements the customized callback method(s)"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "Handles - identifies resources such as network connections, open files, and synchronization objects",
        "An implementation of the Reactor interface provides a set of application-independent event demultiplexing and dispatching mechanisms.",
        "These mechanisms dispatch application-specific Event Handler in response to events occurring on one or more Handles."
      ]
    }],
    [{
      "name": "h2",
      "value": "Benefits"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 868px; height: 505px; z-index: 4; left: 51px; top: 127px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "SoC - event handlers can be separated from low level concerns"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Improve modularity, reusability, and configurability of event-driven applications"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Improves application portability"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Efficiant - No threads creation and context switching"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "Simplified concurrency - single threaded, completely avoids threads reliability hazards"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "One Stack"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "More easily resilient - if a turn fails, the program CAN keep going with no integrity issues"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "No race conditions &amp; Mutual exclusion &amp; dead locks"
      ]
    }],
    [{
      "name": "h2",
      "value": "Drawbacks"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 935px; height: 138px; z-index: 4; left: 9px; top: 166px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "No blocking"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Cannot take too much time - turns must finish very quickly"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Difficult to understand (debug) - inverted flow of control"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": [
        "Gas Pump"
      ]
    }],
    [{
      "name": "h2",
      "value": "But What about Long Running tasks?"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 918px; height: 430px; z-index: 4; left: 16px; top: 156px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Eteration (coined by Doug crockford) - multiple turns for long tasks, when each turn calls the next one using a callback passed to a defer execution"
        }]
      }, {
        "name": "div",
        "attributes": {
          "class": "fragment",
          "data-fragment-index": "1",
          "style": "text-align: left;"
        },
        "value": [{
          "name": "iframe",
          "attributes": {
            "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=..4.reactor-model.eteration.js",
            "style": "width: 916px; height: 302px; max-height: none; max-width: none;"
          }
        }]
      }]
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 752px; height: 46px; z-index: 4; left: 17px; top: 605px;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Workers - move the task to a separate process"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "Node Event Loop"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 899px; height: 272px; z-index: 5; left: 26px; top: 86px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Single thread event loop - \"A programming construct that waits for and dispatches events or messages in a program\" (wikipedia)"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Everything (except your code) runs in parallel - I/O events are dispatched to Node event loop which handles threads, process optimizations, concurrency, etc."
        }]
      }]
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 899px; height: 358px; max-height: none; max-width: none; left: 30px; top: 340px; z-index: 6;"
      },
      "value": [{
        "name": "iframe",
        "attributes": {
          "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=..4.reactor-model.event-loop-psuedo.hs",
          "class": "fragment",
          "data-fragment-index": "2",
          "style": "width: 100%; height: 100%;"
        }
      }]
    }],
    [{
      "name": "p",
      "value": "<br>"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 925px; height: 136px; z-index: 4; left: 20px; top: 40px; max-height: none; max-width: none;"
      },
      "value": "An event loop is \"an entity that handles and processes external events and converts them into callback invocations\"."
    }, {
      "name": "p",
      "value": "<br>"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 929px; height: 93px; z-index: 4; left: 13px; top: 221px; max-height: none; max-width: none;"
      },
      "value": "So I/O calls are the points at which Node can switch from one request to another."
    }, {
      "name": "p",
      "value": "<br>"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 891px; height: 92px; z-index: 4; left: 13px; top: 367px; max-height: none; max-width: none;"
      },
      "value": "At an I/O call, our code saves the callback and returns control to Node runtime environment."
    }, {
      "name": "p",
      "value": "<br>"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "2",
        "style": "position: absolute; width: 888px; height: 93px; z-index: 4; left: 29px; top: 516px; max-height: none; max-width: none;"
      },
      "value": "The callback will be called later when the data actually is available"
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 771px; height: 181px; z-index: 4; left: 102px; top: 217px; max-height: none; max-width: none;"
      },
      "value": "Javascript programmers are already familiar with the event loop concepts and flow and knows how to code in such environment"
    }]
  ]
}, {
  "steps": [
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 851px; height: 65px; z-index: 4; left: 35px; top: 163px;"
      },
      "value": "Node Versions Management"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 418px; height: 419px; z-index: 4; left: 495px; top: 255px;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2711681/7262859e-c4d0-11e3-99e3-1911ad75b1e2.jpg",
          "style": "width: 378px; height: 378px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "h2",
      "value": "Node Versions"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Node is progressing fast and versions of Node are being released rapidly"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "There are two main versions which are interesting for us:"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "2"
            },
            "value": "The Stable (currently 0.10.26)"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "3"
            },
            "value": "The Latest - with all new features (currently 0.11.12)"
          }]
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "Sometimes we want to switch between versions of Node without having to uninstall and re-install"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "There are a couple of alternative solutions for version managers which deals with this switch"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "n || nvm for OSX/Linux, nvmw || nodist for Windows"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "7"
          },
          "value": "We will be working with n || nodist"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "While all of the above achieve the same goal,",
        "nvm &amp;&amp; nvmw will update your path and",
        "n &amp;&amp; nodist, will move your node files always to the same path, so you'll always know that your current executable lives there"
      ]
    }],
    [{
      "name": "h2",
      "value": "n || nodist"
    }, {
      "name": "iframe",
      "attributes": {
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=..5.node-version-management.commands.sh",
        "style": "width: 918px; height: 561px; max-height: none; max-width: none;"
      }
    }]
  ]
}, {
  "steps": [
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 806px; height: 97px; z-index: 4; left: 74px; top: 248px; max-height: none; max-width: none;"
      },
      "value": "Node Language Additions"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 688px; height: 222px; z-index: 4; left: 260px; top: 357px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2711947/47ea9fbe-c4d4-11e3-9f7b-a64f48dd3a12.jpg",
          "style": "width: 654px; height: 208px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "h2",
      "value": "REPL"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 851px; height: 184px; z-index: 4; left: 61px; top: 166px;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "REPL stands for Read-Eval-Print-Loop"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "It is a utility included with Node"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Works quite similar to the browser debug console"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Can be invoked by typing node on the command line"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "console.log(\"hello\");",
        "function add(a, b) {",
        "  return a + b;",
        "}",
        "console.log(add(3, 4));"
      ]
    }],
    [{
      "name": "h2",
      "value": "Language Additions"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 811px; height: 276px; z-index: 4; left: 75px; top: 166px;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "The same V8 is used for Node and Chrome"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "There are some differences though"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "window, location, and document are not available"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "There is a global object"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "There is a require function for pulling resources"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "5"
          },
          "value": "There is module and process objects"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "console/log(window);",
        "console.log(document);",
        "console.log(location);",
        "console.log(global);",
        "course = \"Lets Node\";",
        "console.log(global.course);"
      ]
    }]
  ]
}, {
  "steps": [
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 679px; height: 65px; z-index: 4; left: 134px; top: 237px;"
      },
      "value": "Node Callback Pattern"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 547px; height: 341px; z-index: 4; left: 383px; top: 340px;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2712218/ede33cde-c4d7-11e3-95b5-9b71f1b27eda.jpg"
        }
      }]
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 141px; z-index: 4; left: 3px; top: 225px;"
      },
      "value": "Asynchronous programming does not use function return values but the continuation-passing style (CPS)"
    }],
    [{
      "name": "blockquote",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 903px; height: 181px; z-index: 4; left: 35px; top: 219px; max-height: none; max-width: none;"
      },
      "value": "\"Continuation-passing style (CPS) is a style of programming in which control is passed explicitly in the form of a continuation. (...)\""
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 141px; z-index: 4; left: -10px; top: 235px;"
      },
      "value": "functions invokes a callback after the operation is complete so that the program can continue"
    }],
    [{
      "name": "h2",
      "value": "We all know Callbacks"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 869px; height: 421px; z-index: 4; left: 39px; top: 148px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Callbacks (also known as higher-order functions) are derived from the functional programming paradigm"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "It is probably the most widely used functional programming technique in JavaScript"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Callbacks are possible in Javascript since functions are first-class objects"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Callbacks are also widely used in node programming"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "Since async I/O is crucial for Node, Callbacks must be used"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "Node Callbacks"
    }, {
      "name": "iframe",
      "attributes": {
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=..7.callback-pattern.node-callbacks.js",
        "style": "width: 916px; height: 405px; max-height: none; max-width: none;"
      }
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "The first argument is an error object"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "first argument should be null if no error occurred"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "The last argument is the callback function"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "Node expects almost all callback functions to accept an Error object as the first argument",
        "A callback function as an argument, should be the last argument",
        "  var dns;",
        "  dns.l;",
        "  var fs;",
        "  fs.rf;"
      ]
    }]
  ]
}, {
  "steps": [
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 834px; height: 65px; z-index: 4; left: 52px; top: 148px;"
      },
      "value": "Node Event Emitter Pattern"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 486px; height: 457px; z-index: 4; left: 416px; top: 222px;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2712771/f32f385e-c4dd-11e3-90a9-586e6abd634a.jpg"
        }
      }]
    }],
    [{
      "name": "h3",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 966px; height: 188px; z-index: 4; left: -11px; top: 200px;"
      },
      "value": "If several events take place during execution, or if they happen several times, the standard callback pattern is not very helpful"
    }],
    [{
      "name": "p",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 684px; height: 46px; z-index: 4; left: 118px; top: 71px;"
      },
      "value": "Therefore, In Node many objects emit events"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 874px; height: 46px; z-index: 4; left: 50px; top: 182px;"
      },
      "value": "Event emitters allow programmers to subscribe to events"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 710px; height: 46px; z-index: 4; left: 127px; top: 299px;"
      },
      "value": "An event emitter is an object that emits events"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "2",
        "style": "position: absolute; width: 865px; height: 92px; z-index: 4; left: 36px; top: 412px; max-height: none; max-width: none;"
      },
      "value": "An event listener is a part of the code that binds to the event emitter and listens for certain types of events"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "3",
        "style": "position: absolute; width: 865px; height: 92px; z-index: 4; left: 36px; top: 532px; max-height: none; max-width: none;"
      },
      "value": "Node supplies an EventEmitter pseudoclass that can work as a base for creating your own event emitters"
    }, {
      "name": "notes",
      "value": [
        "var net;",
        "var tcpServer;",
        "var connLogPrefix;",
        "conn.set;"
      ]
    }],
    [{
      "name": "h2",
      "value": "Event Types"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 896px; height: 497px; z-index: 4; left: 28px; top: 143px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Emitted events always have a type, which is represented by a string"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "There is no way for resolving programmatically what types of events a given event emitter emits"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Event emitter is a generic interface that serves any type of event"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "Most event emitter implementations in Node will emit an \"error\" event every time there is an error"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "4"
          },
          "value": "If there is no listener to the error event type and an event with the \"error\" type occurs, the event emitter will notice it and raise that error as an uncaught exception"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "var events;",
        "var eventEmitter;",
        "  if (!isNaN(data)) {",
        "    eventEmitter.emit(\"numeric\", data);",
        "  }",
        "  eventEmitter.on(;"
      ]
    }],
    [{
      "name": "h2",
      "attributes": {
        "style": "font-style: normal; font-variant: normal;"
      },
      "value": "Event Types (cont'd)"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 886px; height: 322px; z-index: 4; left: 36px; top: 189px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "removeListener can be used to cancel the subscription to the event"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "removeAllListeners can be called on the emitter to cancel all subscriptions to a specific event type"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "once can be used to only handle the first emitted event"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "3"
          },
          "value": "We can extend any object to support events by inheriting the EventEmitter class and simply using the emit() function"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "function dataProcess(data) {",
        "  console.log(connLogPrefix, \" Got Some Data: \", data)",
        "   if (!isNaN(data)) {",
        "     conn.removeListener(\"data\", dataProcess);",
        "     eventEmitter.emit(\"numeric\", data);",
        "   }",
        "}",
        "con.on(\"data\", dataProcess);",
        "var EventEmitter;",
        "iee;",
        "ccnum;",
        "var numericValidator = new NumericValidator();",
        "numericValidator.validate(data);",
        "numericValidator.on(;"
      ]
    }],
    [{
      "name": "pre",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 574px; height: 27px; z-index: 4; left: 185px; top: 583px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "code",
        "attributes": {
          "style": "width: 616px; position: absolute; top: 0; left: 0px;"
        },
        "value": "git clone https://github.com/itkoren/Lets-Node-ex-1.git"
      }]
    }, {
      "name": "img",
      "attributes": {
        "src": "https://cloud.githubusercontent.com/assets/3624786/2731349/0cf580c4-c62b-11e3-84fc-654252af90fa.jpg",
        "class": "absolute-element",
        "style": "position: absolute; max-height: none; max-width: none; width: 415px; height: 556px; z-index: 4; left: 240px; top: -10px;"
      }
    }],
    [{
      "name": "pre",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 458.265664160401px; height: 50px; z-index: 6; left: 253px; top: 483px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "code",
        "attributes": {
          "style": "width: 454px; position: absolute; top: 0; left: 0px;"
        },
        "value": "cd Lets-Node-ex-1<br>git checkout solution"
      }]
    }, {
      "name": "img",
      "attributes": {
        "src": "https://cloud.githubusercontent.com/assets/3624786/2731349/0cf580c4-c62b-11e3-84fc-654252af90fa.jpg",
        "class": "absolute-element",
        "style": "position: absolute; max-height: none; max-width: none; width: 415px; height: 556px; z-index: 4; left: 240px; top: -10px;"
      }
    }]
  ]
}, {
  "steps": [
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 238px; height: 64px; z-index: 4; left: 364px; top: 153px;"
      },
      "value": "Leaking"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 625px; height: 412px; z-index: 4; left: 317px; top: 267px;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2745110/18bd6870-c731-11e3-8530-87ffa0407dc3.jpg",
          "style": "width: 585px; height: 372px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "blockquate",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 679px; height: 96px; z-index: 4; left: 129px; top: 151px;"
      },
      "value": "JavaScript has garbage collection, so there's no way we can leak memory right?"
    }, {
      "name": "h1",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 491px; height: 116px; z-index: 4; left: 224px; top: 309px;"
      },
      "value": "WRONG!!!"
    }],
    [{
      "name": "h2",
      "value": "Leaks"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 900px; height: 232px; z-index: 4; left: 56px; top: 195px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Memory allocated which is unable to be GC'd &amp; reallocated even after it's not being used"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Although we do not have the DOM memory management problems like in the browser, memory leaks are still possible and we should be aware of it"
        }]
      }]
    }],
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 498px; height: 64px; z-index: 4; left: 229px; top: 126px;"
      },
      "value": "But why bother?"
    }, {
      "name": "h2",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 966px; height: 128px; z-index: 4; left: -3px; top: 266px;"
      },
      "value": "We can throw a lot of RAM on our server"
    }],
    [{
      "name": "h2",
      "value": "Since"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 859px; height: 278px; z-index: 4; left: 58px; top: 168px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "V8 becomes increasingly aggressive about garbage collection, slowing your app down"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Leaky code can hang on to references to limited resources. You may run out of file descriptors"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "And sooner or later, your app will crash - and it will happen when you least expect it to happen"
        }]
      }]
    }],
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 779px; height: 128px; z-index: 4; left: 95px; top: 16px; max-height: none; max-width: none;"
      },
      "value": "Major Causes for Memory Leaks in Node"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 853px; height: 233px; z-index: 4; left: 56px; top: 225px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Javacript Closures - closures maintain references to things in their scope"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "EventListeners - cleaning unneeded event listeners"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Circular references - two objects reference each other in such a way that both objects retain each other"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "Closure Leak"
    }, {
      "name": "iframe",
      "attributes": {
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=..9.leaking.closure.js",
        "style": "width: 915px; height: 529px; max-height: none; max-width: none;"
      }
    }],
    [{
      "name": "h2",
      "value": "Event Listener Leak"
    }, {
      "name": "iframe",
      "attributes": {
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=..9.leaking.event-listener.js",
        "style": "width: 915px; height: 510px; max-height: none; max-width: none;"
      }
    }],
    [{
      "name": "h2",
      "value": "Memory leaks are usually hard to detect<br>"
    }, {
      "name": "h2",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0"
      },
      "value": "Caused by some unintentional mistakes within large amount of code"
    }, {
      "name": "h2",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "1"
      },
      "value": "Doesn't affect the functionality of the application until the memory starvation occurs in the system"
    }],
    [{
      "name": "h2",
      "value": "Tools"
    }, {
      "name": "div",
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "value": "Development"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "value": [{
              "name": "a",
              "attributes": {
                "href": "https://github.com/felixge/node-memory-leak-tutorial"
              },
              "value": "v8-profiler with node-inspector"
            }]
          }, {
            "name": "li",
            "value": [{
              "name": "a",
              "attributes": {
                "href": "http://valgrind.org/docs/manual/quick-start.html#quick-start.intro"
              },
              "value": "Valgrind"
            }]
          }]
        }, {
          "name": "li",
          "value": "Production:"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "value": [{
              "name": "a",
              "attributes": {
                "href": "https://github.com/lloyd/node-memwatch"
              },
              "value": "node-memwatch"
            }]
          }]
        }]
      }]
    }]
  ]
}, {
  "steps": [
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 437px; height: 64px; z-index: 4; left: 211px; top: 199px;"
      },
      "value": "Node Modules"
    }, {
      "name": "div",
      "value": "<br>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 658px; height: 414px; z-index: 4; left: 315px; top: 281px;"
      },
      "value": [{
        "name": "img",
        "attributes": {
          "src": "https://cloud.githubusercontent.com/assets/3624786/2749248/1e139a14-c7f5-11e3-9e3d-147cbada350c.png",
          "style": "width: 618px; height: 373px; max-height: none; max-width: none;"
        }
      }]
    }],
    [{
      "name": "h2",
      "value": "Modules"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 818px; height: 278px; z-index: 4; left: 67px; top: 145px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "Modules are the building blocks (code packages) of a Node applications"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "Some modules are packaged with Node distribution and represents the core API"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "2"
          },
          "value": "Node implements the CJS (Common JS) specifications (require &amp; exports)"
        }]
      }]
    }],
    [{
      "name": "h2",
      "value": "require"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 907px; height: 556px; z-index: 4; left: 29px; top: 118px; max-height: none; max-width: none;"
      },
      "value": [{
        "name": "ul",
        "value": [{
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "0"
          },
          "value": "When you require() a module, you can use name, relative or absolute paths"
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "1"
          },
          "value": "When you use named modules, Node will search for it in the following order:"
        }, {
          "name": "ul",
          "value": [{
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "2"
            },
            "value": "Core modules"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "3"
            },
            "value": "Current execution path"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "4"
            },
            "value": "Traverse up and check for existence of the module"
          }, {
            "name": "li",
            "attributes": {
              "class": "fragment",
              "data-fragment-index": "5"
            },
            "value": "Paths outlined in the require.paths array (can be extended with environment variables or code)"
          }]
        }, {
          "name": "li",
          "attributes": {
            "class": "fragment",
            "data-fragment-index": "6"
          },
          "value": "Searching for modules is done by looking for a physical file, then a directory with index.js and then a directory with package.json"
        }]
      }]
    }, {
      "name": "notes",
      "value": [
        "Try it in REPL",
        "    require",
        "    module.paths",
        "    module"
      ]
    }],
    [{
      "name": "h2",
      "value": "require Flow"
    }, {
      "name": "iframe",
      "attributes": {
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.10.node-modules.require-psuedo.hs",
        "style": "width: 915px; height: 564px; max-height: none; max-width: none;"
      }
    }],
    [{
      "name": "p",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 885px; height: 46px; z-index: 4; left: 40px; top: 130px;"
      },
      "value": "A call to require() function returns module.exports object"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 840px; height: 139px; z-index: 4; left: 60px; top: 256px; max-height: none; max-width: none;"
      },
      "value": "require() function is actually re-defined for the current module, and calls an internal function loadModule with a reference to the current Module"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 877px; height: 93px; z-index: 4; left: 52px; top: 471px; max-height: none; max-width: none;"
      },
      "value": "The module.exports is automatically set to the same object as the exports"
    }, {
      "name": "notes",
      "value": [
        "REPL:",
        "    console.log(module);",
        "    console.log(module.exports);",
        "    console.log(exports);",
        "    module.js",
        "    console.log(module);",
        "    console.log(module.exports);",
        "    console.log(exports);",
        "    console.log(module.exports === exports);"
      ]
    }],
    [{
      "name": "h2",
      "attributes": {
        "class": "absolute-element",
        "style": "position: absolute; width: 672px; height: 64px; z-index: 5; left: 148px; top: 12px;"
      },
      "value": "require is Syncronious"
    }, {
      "name": "div",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 773px; height: 64px; z-index: 6; left: 89px; top: 110px; max-height: none; max-width: none;"
      },
      "value": "require() is actually a synchronous function!"
    }, {
      "name": "div",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 920px; height: 100px; z-index: 7; left: 21px; top: 197px; max-height: none; max-width: none;"
      },
      "value": "there used to be an asynchronous version of require() named require.async() (removed a year ago)"
    }, {
      "name": "div",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "2",
        "style": "position: absolute; width: 894px; height: 88px; z-index: 8; left: 27px; top: 316px; max-height: none; max-width: none;"
      },
      "value": "there is a community module named require.async which can be used instead"
    }, {
      "name": "iframe",
      "attributes": {
        "class": "fragment absolute-element",
        "data-fragment-index": "2",
        "style": "width: 939px; height: 171px; max-height: none; max-width: none; position: absolute; z-index: 9; left: 17px; top: 417px;",
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.10.require.async.js"
      }
    }, {
      "name": "notes",
      "value": [
        "util.js",
        "    function merge(obj, other) {",
        "    var keys = Object.keys(other); // How cool it is not to think about cross-browser support HA?",
        "    for (var i = 0, len = keys.length; i &lt; len; ++i) {",
        "    var key = keys[i];",
        "    obj[key] = other[key];",
        "    }",
        "    return obj;",
        "    }",
        "",
        "main.js",
        "    var utils = require(\"./utils\");",
        "    var a = { one: 1 };",
        "    var b = { two: 2 };",
        "    utils.merge(a, b);",
        "    console.dir(a);",
        "",
        "    node main.js",
        "",
        "util.js",
        "    add",
        "    var merge = exports.merge = function(obj, other)",
        "    node main.js",
        "    npm install require.async",
        "",
        "sasson.js",
        "    var sassUrl = \"http://github.com/visionmedia/sass.js/raw/master/lib/sass.js\";",
        "    var sassStr = \"body\n\\",
        "    a\n\\",
        "    :color #eee\";",
        "    require.async(sassUrl, function(sass){",
        "      var str = sass.render(sassStr);",
        "      console.log(str);",
        "    });",
        "    node sasson.js"
      ]
    }],
    [{
      "name": "h2",
      "value": "Module Scope"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 895px; height: 138px; z-index: 4; left: 28px; top: 119px; max-height: none; max-width: none;"
      },
      "value": "requiring a module actually means, bringing the required module to the current scope and not making it available globally"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 854px; height: 94px; z-index: 4; left: 54px; top: 289px; max-height: none; max-width: none;"
      },
      "value": "The first time Node loads a module via require() it caches the result!"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "2",
        "style": "position: absolute; width: 884px; height: 93px; z-index: 4; left: 33px; top: 425px; max-height: none; max-width: none;"
      },
      "value": "The reason this is necessary is to <a href=\"http://nodejs.org/docs/latest/api/modules.html#modules_cycles\">allow cycles to be resolved</a>"
    }, {
      "name": "div",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "3",
        "style": "position: absolute; width: 905px; height: 93px; z-index: 4; left: 27px; top: 558px; max-height: none; max-width: none;"
      },
      "value": "Be aware that like in requirejs, caching causes all modules to act as singletons"
    }, {
      "name": "notes",
      "value": [
        "module.js",
        "    module.exports = {",
        "    name: \"Default name\",",
        "    desc: \"Default desc\"",
        "    };",
        "",
        "modules.js",
        "    var module1 = require(\"./module.js\");",
        "    var module2 = require(\"./module.js\");",
        "    module1.name = \"module 1\";",
        "    module2.name = \"module 2\";",
        "    console.log(module1);",
        "    console.log(module2);",
        "",
        "    node modules.js"
      ]
    }],
    [{
      "name": "h2",
      "value": "Module Scope (cont'd)"
    }, {
      "name": "p",
      "value": "<br>"
    }, {
      "name": "p",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "0"
      },
      "value": "While modules are cached by require, it is possible to use a function to create a new variable scope"
    }, {
      "name": "p",
      "value": "<br>"
    }, {
      "name": "p",
      "attributes": {
        "class": "fragment",
        "data-fragment-index": "1"
      },
      "value": "Lets see"
    }, {
      "name": "notes",
      "value": [
        "module.js",
        "    module.exports = function() {",
        "    return {",
        "    name: \"Default name\",",
        "    desc: \"Default desc\"",
        "    };",
        "    };",
        "modules.js",
        "    var module1 = require(\"./module.js\")();",
        "    var module2 = require(\"./module.js\")();",
        "",
        "node modules.js"
      ]
    }],
    [{
      "name": "h2",
      "value": "Module Scope (cont'd)"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "0",
        "style": "position: absolute; width: 930px; height: 93px; z-index: 4; left: 14px; top: 98px; max-height: none; max-width: none;"
      },
      "value": "There are rare cases that you would like to flush the require cache for a specific module"
    }, {
      "name": "p",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "1",
        "style": "position: absolute; width: 553px; height: 46px; z-index: 4; left: 192px; top: 202px;"
      },
      "value": "This is possible using the following:"
    }, {
      "name": "iframe",
      "attributes": {
        "class": "absolute-element fragment",
        "data-fragment-index": "2",
        "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.10.require.scope.js",
        "style": "width: 916px; height: 456px; max-height: none; max-width: none; position: absolute; z-index: 4; left: 21px; top: 241px;"
      }
    }]
  ]
}]
