[{
    "steps": [
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3085138/6ce5442c-e509-11e3-9fa1-312bbaf05da4.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 516px; height: 480px; z-index: 4; left: 225px; top: 137px;"
            }
        }, {
            "name": "h2",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 594px; height: 95px; z-index: 4; left: 198px; top: 64px;"
            },
            "value": "Reggie"
        }, {
            "name": "notes",
            "value": [
                "For working with internal modules, LivePerson is using Reggie"
            ]
        }],
        [{
            "name": "p",
            "value": "<a href=\"https://github.com/mbrevoort/node-reggie\">Reggie</a> is a NodeJS server which is a lightweight alternative to a full blown npm registry"
        }, {
            "name": "notes",
            "value": [
                "As for today, there is no simple out of the box solution for managing a private NPM repository",
                "Doing it, still requires managing a full replication of the public repository",
                "There is a proxy solution (Kappa) from PayPal that we still need to check, but currently we are using Reggie which is a very simple solution",
                "Lets see what we have inside - via postman",
                ""
            ]
        }],
        [{
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 488px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.29.reggie.sh",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }]
    ]
}, {
    "steps": [
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3096606/ff4a3710-e5d5-11e3-8c94-88a130221d57.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 616px; height: 410px; z-index: 4; left: 185px; top: 137px;"
            }
        }, {
            "name": "h2",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 594px; height: 95px; z-index: 4; left: 198px; top: 64px;"
            },
            "value": "LivePerson Modules"
        }, {
            "name": "notes",
            "value": [
                "Formally, We started working with Node in LivePerson, almost a year ago"
            ]
        }],
        [{
            "name": "h2",
            "value": "NodeJS in LivePerson"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "0"
                    },
                    "value" : "Two Server Applications in GA (Loggos & Batchelor)"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "7 Internal Modules"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : "2 More Projects in Work (Collaboration & Labs)"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "3"
                    },
                    "value" : "Many More Expected Node Projects in Queue"
                }
            ]
        }, {
            "name": "notes",
            "value": [
                "Available Modules: lp_js_gate_keeper, lp_js_http_status, lp_js_localcache, lp_js_logger, lp_js_service_status, lp_js_security_utils, lp_js_service_directory",
                "",
                "Go to Reggie and talk a little about existing modules",
                "We've Created the Integration and Services LivePerson Uses Like Cassandra, Service Directory, etc. Rapidly, without the need to use the company java implementations",
                "",
                "I would like to ask Efim to talk a little about LivePerson Modules and our vision"
            ]
        }]
    ]
}, {
    "steps": [
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3019611/93104c48-df94-11e3-9036-b9d00d4cb95e.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 316px; height: 310px; z-index: 4; left: 325px; top: 337px;"
            }
        }, {
            "name": "h2",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 594px; height: 95px; z-index: 4; left: 198px; top: 164px;"
            },
            "value": "Benchmarking and Stress Testing"
        }, {
            "name": "notes",
            "value": [
                "There comes a time during our application development phase, that we would like to understand its limits"
            ]
        }],
        [{
            "name": "h2",
            "value": "Importance of Stress Testing"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "0"
                    },
                    "value" : "Understanding the maximum load our application can handle"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "Learning where our Node program spends its time"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : "Exposing memory leaks and bottlenecks"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "3"
                    },
                    "value" : "Making sure our application is dealing with basic load without \"melting\""
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "4"
                    },
                    "value" : "++"
                }, {
                    "name": "notes",
                    "value": [
                        "Lets talk about creating load"
                    ]
                }
            ]
        }],
        [{
            "name": "h2",
            "value": "Important to Remember"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 560px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.31.profiling.and.stress.testing.sh",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "Important to remember when testing locally"
            ]
        }],
        [{
            "name":"p",
            "value":"Use <a href\"https://github.com/alexfernandez/loadtest\">loadtest</a> or tools like <a href=\"https://github.com/11main/nodeload\">nodeload</a> for local stress testing"
        }, {
            "name": "notes",
            "value": [
                "Before we'll deal with distributed stress testing, Lets start with local tests",
                "",
                "Lets see the loadtest module",
                "",
                "But this is not enough for understanding the real numbers our application supports",
                "For that we will need to conduct distributed stress testing"
            ]
        }],
        [{
            "name":"h2",
            "value":"Distributed Stress Testing Tools"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "0"
                    },
                    "value" : "<a href=\"https://github.com/jugglinmike/beeswithmachineguns\">Bees with Machine Guns</a>"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "<a href=\"https://www.blitz.io/\">Blitz.IO</a>"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : "<a href=\"http://www.redline13.com/\">RedLine13</a>"
                }
            ]
        }, {
            "name": "notes",
            "value": [
                "Before we'll deal with distributed stress testing, Lets start with local tests",
                "",
                "Lets see the loadtest module",
                "",
                "But this is not enough for understanding the real numbers our application supports",
                "For that we will need to conduct distributed stress testing"
            ]
        }]
    ]
}, {
    "steps": [
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3110798/8461339e-e6a9-11e3-9b2c-8b28a0fc2c9e.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 516px; height: 480px; z-index: 4; left: 225px; top: 137px;"
            }
        }, {
            "name": "h2",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 594px; height: 95px; z-index: 4; left: 198px; top: 64px;"
            },
            "value": "Deployment & RPM"
        }, {
            "name": "notes",
            "value": [
                "We are almost ready for deploying our application",
                "",
                "In order to do so, we will need to create an RPM for our project",
                "Usually, we are using a defined build process which includes code validation (jshint), running tests and producing the RPM",
                "This process can also deploy the RPM to a selected environments and run automation tests on it",
                "This is created using Grunt and Maven as a container while the RPM is created using puppet",
                "",
                "I would like to invite Omer H. to talk about the build process and deployment"
            ]
        }]
    ]
}, {
    "steps": [
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3122566/a49b9cc0-e768-11e3-93a6-72c6049953fb.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 516px; height: 480px; z-index: 4; left: 225px; top: 197px;"
            }
        }, {
            "name": "h2",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 594px; height: 95px; z-index: 4; left: 198px; top: 64px;"
            },
            "value": "Realtime Streaming with WebSockets"
        }, {
            "name": "notes",
            "value": [
                "Up until now we learned what is Node and how we can use its advantages",
                "We saw how we can create a fast Node HTTP Web server which handles large amount of requests but everything was based on HTTP",
                "",
                "One of the core technologies powering the web is HTTP",
                "Unfortunately, HTTP current version 1.1, was last updated around 1999 and in fact hardly changed since roughly 1996",
                "",
                "Meanwhile the web had changed quite a bit with dynamic content, pages with many resources, single page applications and much more",
                "",
                "For many years, HTTP and real-time applications didn’t really go together very well"
            ]
        }],
        [{
            "name": "h2",
            "value": "WebSockets"
        }, {
            "name": "iframe",
            "attributes": {
                "src": "//player.vimeo.com/video/26326729",
                "width": "800",
                "height": "581",
                "style": "width: 825px; height: 600px; max-height: none; max-width: none;",
                "webkitallowfullscreen": true,
                "mozallowfullscreen": true,
                "allowfullscreen": true
            }
        }],
        [{
            "name": "h2",
            "value": "What is wrong with HTTP for real-time applications?"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "0"
                    },
                    "value" : "Designed around a request-response model (message based protocol)"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "All HTTP communications are initiated by the client"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : "Request must wait for response (connection is not fully utilized)"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "3"
                    },
                    "value" : "One slow response delays all the other requests (head of line blocking)"
                }
            ]
        }],
        [{
            "name": "p",
            "value": "WebSockets give browsers the ability to communicate with a server over a full-duplex communication channel"
        }, {
            "name": "notes",
            "value": [
                "But Node is best fitting DIRTy applications - these can use one of the most prominent technologies today - WebSockets",
                "The WebSocket protocol was developed to overcome the shortcomings of HTTP in relation to real-time applications",
                "WebSockets give browsers the ability to communicate with a server over a full-duplex communication channel",
                "At its core, a WebSocket connection is just a conventional TCP connection between an HTTP server and an HTTP client"
            ]
        }],
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3128710/564b4212-e7d8-11e3-9679-e9109b9a4cde.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 580px; z-index: 4; left: 65px; top: 67px;"
            }
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3128788/a78a2dc2-e7d9-11e3-9b8b-dba91e37c436.png",
                "class": "absolute-element fragment",
                "data-fragment-index" : "0",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 580px; z-index: 5; left: 65px; top: 67px;"
            }
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3128850/d2c7efd2-e7da-11e3-8d2d-65f910f4be92.png",
                "class": "absolute-element fragment",
                "data-fragment-index" : "1",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 580px; z-index: 6; left: 65px; top: 67px;"
            }
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3128925/cf50a596-e7db-11e3-9fdf-84cf96c99f44.png",
                "class": "absolute-element fragment",
                "data-fragment-index" : "2",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 580px; z-index: 7; left: 65px; top: 67px;"
            }
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3128959/4e512550-e7dc-11e3-8fb7-51b7bad1c1ec.png",
                "class": "absolute-element fragment",
                "data-fragment-index" : "3",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 580px; z-index: 8; left: 65px; top: 67px;"
            }
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3129366/4f11d4b6-e7e2-11e3-9a8a-deff16693125.png",
                "class": "absolute-element fragment",
                "data-fragment-index" : "4",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 580px; z-index: 9; left: 65px; top: 67px;"
            }
        }],
        [{
            "name": "h2",
            "value": "Handshake"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 488px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.33.websockets.handshake.txt",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "At its core, a WebSocket connection is just a conventional TCP connection between an HTTP server and an HTTP client.",
                "It’s established using a handshake protocol, which is very similar to an HTTP handshake",
                "Although this starts out as a regular HTTP connection, the client asks to “upgrade” this connection to a WebSocket connection"
            ]
        }],
        [{
            "name": "h2",
            "value": "Upgrade"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 488px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.33.websockets.upgrade.txt",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "If the server supports the WebSocket protocol, it answers like this",
                "",
                "This marks the end of the handshake, and the connection switches to data transfer mode",
                "Both sides can now send messages back and forth without any HTTP overhead or additional handshakes,",
                "making it a bi-directional full-duplex communication connection in which both client and server can send messages to one another at any time without having to wait for one another"
            ]
        }],
        [{
            "name": "h2",
            "value": "Client"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 628px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.33.websockets.client.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "If the server supports the WebSocket protocol, it answers like this",
                "",
                "This marks the end of the handshake, and the connection switches to data transfer mode",
                "Both sides can now send messages back and forth without any HTTP overhead or additional handshakes,",
                "making it a bi-directional full-duplex communication connection in which both client and server can send messages to one another at any time without having to wait for one another"
            ]
        }],
        [{
            "name": "h2",
            "value": "Server"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 488px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.33.websockets.server.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "If the server supports the WebSocket protocol, it answers like this",
                "",
                "This marks the end of the handshake, and the connection switches to data transfer mode",
                "Both sides can now send messages back and forth without any HTTP overhead or additional handshakes,",
                "making it a bi-directional full-duplex communication connection in which both client and server can send messages to one another at any time without having to wait for one another"
            ]
        }],
        [{
            "name": "h2",
            "value": "WebSockets (cont'd)"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "value": "WebSockets solves many of the HTTP 1.1 disadvantages. It also have some additional advantages:"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "0"
                    },
                    "value" : "Sending and Receiving Text and Binary Data"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "Subprotocol Negotiation"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : "Binary Framing Layer"
                }
            ]
        }, {
            "name": "notes",
            "value": [
                "Further, unlike HTTP or XHR requests, which communicate additional metadata via HTTP headers of each request and response, there is no such equivalent mechanism for a WebSocket message. As a result, if additional metadata about the message is required, then the client and server must agree to implement their own subprotocol to communicate this data",
                "",
                "WebSocket provides a simple and convenient subprotocol negotiation API to address the second problem. The client can advertise which protocols it supports to the server as part of its initial connection handshake",
                "",
                "The messages are split to one or more frames and the receiver is notified of its delivery when the entire message is available",
                "",
                "However, WebSockets does support multiplexing (although there is an extension that will) so order is important and therefore Head-of-Line Blocking can still occur",
                "Big messages, although split to frames can block the entire connection for other messages",
                "Keep that in mind and try to create small messages"
            ]
        }],
        [{
            "name": "h2",
            "value": "WebSockets Abstractions"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3129954/44f94b42-e7ee-11e3-975a-2693c0dc49a4.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 816px; height: 460px; z-index: 4; left: 65px; top: 237px;"
            }
        }, {
            "name": "p",
            "value": "We still don't have a full browser support for WebSockets so sometimes we'll want to use an abstraction"
        }],
        [{
            "name": "h2",
            "value": "WebSockets Abstractions (cont'd)"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "value": "There are two widely used WebSockets implementation abstractions:"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "0"
                    },
                    "value" : "SocketIO"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "SockJS"
                }
            ]
        }, {
            "name": "notes",
            "value": [
                "We are using SockJS since we found it the easiest to use and work with and  it’s API matches exactly the WebSockets standard API"
            ]
        }],
        [{
            "name": "h2",
            "value": "SockJS Server"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 658px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.33.websockets.sockjs.server.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }],
        [{
            "name": "h2",
            "value": "SockJS Client"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 488px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.33.websockets.sockjs.client.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "SockJS will fallback to long polling (iframe, xhr, JSON etc.) based on the browser support"
            ]
        }],
        [{
            "name": "pre",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 900px; height: 27px; z-index: 4; left: 130px; top: 563px; max-height: none; max-width: none;"
            },
            "value": [{
                "name": "code",
                "attributes": {
                    "style": "width: 900px; position: absolute; top: 0; left: 0px;"
                },
                "value": "git clone --recursive https://github.com/itkoren/Lets-Node-ex-9.git"
            }]
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/2731349/0cf580c4-c62b-11e3-84fc-654252af90fa.jpg",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 415px; height: 556px; z-index: 4; left: 240px; top: -10px;"
            }
        }],
        [{
            "name": "pre",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 418px; height: 60px; z-index: 6; left: 240px; top: 453px; max-height: none; max-width: none;"
            },
            "value": [{
                "name": "code",
                "attributes": {
                    "style": "width: 414px; position: absolute; top: 0; left: 0px;"
                },
                "value": "cd Lets-Node-ex-9"
            }, {
                "name": "code",
                "attributes": {
                    "style": "width: 414px; position: absolute; top: 30px; left: 0px;"
                },
                "value": "git checkout solution"
            }]
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/2731491/c15cc804-c62d-11e3-8042-85bf96b3de7d.jpeg",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 415px; height: 456px; z-index: 4; left: 240px; top: -10px;"
            }
        }]
    ]
}, {
    "steps": [
        [{
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/3130689/a21b7752-e7fb-11e3-9dad-0f22f954c6c5.png",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 516px; height: 480px; z-index: 4; left: 225px; top: 137px;"
            }
        }, {
            "name": "h2",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 594px; height: 95px; z-index: 4; left: 198px; top: 64px;"
            },
            "value": "Scalability"
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }, {
            "name": "a",
            "attributes": {
                "href": "./resources/scaling_node_summit_joyent.html#t=1m23s",
                "target": "_blank",
                "style": "position: absolute; max-height: none; max-width: none; left: 445px; top: 667px;"
            },
            "value": "Video"
        }],
        [{
            "name": "h2",
            "value": "Performance Increasing"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "Only a couple of options for increasing the performance of an application:"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "1"
                    },
                    "value" : "Increasing the efficiency of the code"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : [{
                        "name": "p",
                        "value": "Scaling up the server infrastructure"
                    }, {
                        "name":"ul",
                        "value":[
                            {
                                "name" : "li",
                                "attributes" : {
                                    "class" : "fragment",
                                    "data-fragment-index" : "3"
                                },
                                "value" : "Vertical scaling (scaling up)"
                            },
                            {
                                "name" : "li",
                                "attributes" : {
                                    "class" : "fragment",
                                    "data-fragment-index" : "4"
                                },
                                "value" : "Horizontal scaling (scaling out)"
                            }
                        ]
                    }]
                }
            ]
        }, {
            "name": "notes",
            "value": [
                "When it comes to increasing the performance of websites and web services, there are only a couple of options:",
                "increase the efficiency of the code, or scale up the server infrastructure.",
                "Improving efficiency will only go so far, so at some point scaling is likely required. When it comes to scaling, there are two options:",
                "vertical scaling, or horizontal scaling.",
                "Vertical scaling means getting more powerful servers, with higher processing speed and more memory, while horizontal scaling means spreading the load across multiple individual servers.",
                "Vertical scaling will only go so far, and may not be cost effective.",
                "Horizontal scaling is a much more effective way of improving performance, and has much greater potential for future increases."
            ]
        }],
        [{
            "name": "h2",
            "value": "Scaling Node"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "Node is highly efficient and geared up to handle high volumes of connections and requests out of the box"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "1"
            },
            "value": "There are only small number of tweaks we can do to node itself, to achieve performance improvements"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element fragment",
                "data-fragment-index" : "2",
                "style": "position: absolute; width: 989px; height: 218px; max-height: none; max-width: none; left: 10px; top: 420px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.socket.pooling.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }],
        [{
            "name": "h2",
            "value": "Node Command Line Arguments"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 608px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.command.line.args.sh",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }],
        [{
            "name": "h2",
            "value": "Scaling Node (cont'd)"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "Node is single-threaded and doesn’t automatically make use of more than a single core"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "1"
            },
            "value": "The application can be modified to use multi-process environments and efficiently load balance the traffic across multiple CPU cores"
        }, {
            "name": "notes",
            "value": [
                "Thanks to its event-driven design that can handle I/O asynchronously, Node.js is geared up to handle high volumes of connections and requests out of the box",
                "",
                "BUT, Node is single-threaded and doesn’t automatically make use of more than a single core in your potentially multi-core machine.",
                "This means, your application won’t take full advantage, of the available capacity the server hosting it, has to offer.",
                "",
                "It’s possible to modify your application so that it forks a number of threads that all accept() data on the same port and efficiently load balance it across multiple CPU cores.",
                "",
                "Node has a core module called cluster that offers all of the tools you need to achieve this, however it’ll take a bit of elbow grease to work it into your application."
            ]
        }],
        [{
            "name": "h2",
            "value": "Cluster Core Module"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 608px; max-height: none; max-width: none; left: 10px; top: 100px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.cluster.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "It’s possible to modify your application so that it forks a number of threads that all accept() data on the same port and efficiently load balance it across multiple CPU cores.",
                "",
                "Node has a core module called cluster that offers all of the tools you need to achieve this, however it’ll take a bit of elbow grease to work it into your application.",
                "The cluster module allows you to easily create child processes that all share server ports",
                "",
                "If you’re using express, eBay have built a module for it called cluster2"
            ]
        }],
        [{
            "name": "p",
            "value": "Cluster = Simple solution for vertical scaling"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "But we have no control over the load balancing itself"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "1"
            },
            "value": "And it is not yet ideal for real-world production environments and for working with express based applications"
        }, {
            "name": "notes",
            "value": [
                "If you’re using express, eBay have built a module for it called cluster2"
            ]
        }],
        [{
            "name": "h2",
            "value": "Cluster2 Module (by EBay)"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.cluster2.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "If you’re using express, eBay have built a module for it called cluster2",
                "",
                "PM2 is another option which gives us a process manager for Node apps with a built-in load balancer - based on the core cluster module"
            ]
        }],
        [{
            "name": "p",
            "value": "This allows us to more effectively take advantage of modern hardware"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "BUT, we are still limited by the resources of a single machine"
        }],
        [{
            "name": "h2",
            "value": "Scaling Across Machines (Horizontal Scaling)"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "For scaling out to multiple machines, we will need a reverse proxy"
        }, {
            "name": "notes",
            "value": [
                "If the application receives significant traffic, eventually we will need to scale out to multiple machines.",
                "This can be done using a reverse proxy server to load balance the incoming requests among multiple servers"
            ]
        }],
        [{
            "name": "h2",
            "value": "node-http-proxy Module (By Nodejitsu)"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.http.reverse.proxy.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "If the application receives significant traffic, eventually we will need to scale out to multiple machines.",
                "This can be done using a reverse proxy server to load balance the incoming requests among multiple servers",
                "",
                "In the example we can see that the load is balanced between two servers running on different machines"
            ]
        }],
        [{
            "name": "p",
            "value": "But how can we add new workers to the service?"
        }, {
            "name": "notes",
            "value": [
                "The balancer is hard coded with the location of each worker, which means that if a worker crashes, the balancer will continue to send it requests",
                "",
                "There is an additional problem of how to add new workers to the service.",
                "In order to add additional workers, the previous balancer would have to be edited and reloaded.",
                "This problem could be lessened by using a configuration file that the load balancer reloads every so often, but this still requires manual tracking and updating of the configuration file."
            ]
        }],
        [{
            "name": "h2",
            "value": "seaport Module (By Substack)"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.seaport.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }],
        [{
            "name": "h2",
            "value": "seaport Module (By Substack) - worker update"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.seaport.worker.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }],
        [{
            "name": "p",
            "value": "This is a nice way of keeping entire software stack in the same technology"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "However, in production systems, it is more common to use a more optimized reverse proxy load balancing alternative"
        }],
        [{
            "name": "h2",
            "value": "Scaling using NginX"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "NginX - open source HTTP server and reverse proxy"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "1"
            },
            "value": "It is highly optimized for:"
        }, {
            "name":"ul",
            "value":[
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "2"
                    },
                    "value" : "Serving static files such as CSS and HTML"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "3"
                    },
                    "value" : "Caching resources"
                },
                {
                    "name" : "li",
                    "attributes" : {
                        "class" : "fragment",
                        "data-fragment-index" : "4"
                    },
                    "value" : "Requests forwarding"
                }
            ]
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "5"
            },
            "value": "Can be used to deal with the static resources, while forwarding requests for dynamic content to the Node server(s)"
        }],
        [{
            "name": "h2",
            "value": "NginX Configuration"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.nginx.conf",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "With NginX, there are additional tweaks which can increase performance, such as caching and serving static resources",
                "",
                "Another Important NOTE is that early SSL termination busts performance and we can do it in NginX"
            ]
        }],
        [{
            "name": "p",
            "value": "While it is hard to find many downsides to NginX"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "NginX is a server, not a load balancer"
        }],
        [{
            "name": "h2",
            "value": "Scaling using HAProxy"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "HAProxy (High Availability Proxy) - open source Proxy server"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "1"
            },
            "value": "Highly optimized and built solely to load balance LOTS of machines"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "2"
            },
            "value": "Comes with all the great load balancing features of Nginx + much more load balancing settings"
        }],
        [{
            "name": "h2",
            "value": "HAProxy Configuration"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.haproxy.cfg",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                "With haproxy, there are additional load balancing tweaks which can increase performance"
            ]
        }],
        [{
            "name": "h2",
            "value": "Shared State & Messaging"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "0"
            },
            "value": "Node offers very little out-of-the-box options for shared state, and has no native shared memory model"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "1"
            },
            "value": "In an ideal world, the application would be totally stateless"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "p",
            "attributes" : {
                "class" : "fragment",
                "data-fragment-index" : "2"
            },
            "value": "But in real world scenarios we may want to share state or send messages to the active nodes"
        }],
        [{
            "name": "h2",
            "value": "Messaging with RabbitMQ"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.rabbitmq.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }],
        [{
            "name": "h2",
            "value": "State Sharing with Redis"
        }, {
            "name": "p",
            "value": "<br>"
        }, {
            "name": "div",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 989px; height: 684px; max-height: none; max-width: none; left: 10px; top: 76px; z-index: 6;"
            },
            "value": [{
                "name": "iframe",
                "attributes": {
                    "src": "https://itkoren.github.io/egist/?data-gist-id=9869038&amp;data-gist-file=.34.scaling.redis.js",
                    "style": "width: 100%; height: 100%;"
                }
            }]
        }, {
            "name": "notes",
            "value": [
                ""
            ]
        }],
        [{
            "name": "pre",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 900px; height: 27px; z-index: 4; left: 130px; top: 563px; max-height: none; max-width: none;"
            },
            "value": [{
                "name": "code",
                "attributes": {
                    "style": "width: 900px; position: absolute; top: 0; left: 0px;"
                },
                "value": "git clone --recursive https://github.com/itkoren/Lets-Node-ex-10.git"
            }]
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/2731349/0cf580c4-c62b-11e3-84fc-654252af90fa.jpg",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 415px; height: 556px; z-index: 4; left: 240px; top: -10px;"
            }
        }],
        [{
            "name": "pre",
            "attributes": {
                "class": "absolute-element",
                "style": "position: absolute; width: 418px; height: 60px; z-index: 6; left: 240px; top: 453px; max-height: none; max-width: none;"
            },
            "value": [{
                "name": "code",
                "attributes": {
                    "style": "width: 414px; position: absolute; top: 0; left: 0px;"
                },
                "value": "cd Lets-Node-ex-10"
            }, {
                "name": "code",
                "attributes": {
                    "style": "width: 414px; position: absolute; top: 30px; left: 0px;"
                },
                "value": "git checkout solution"
            }]
        }, {
            "name": "img",
            "attributes": {
                "src": "https://cloud.githubusercontent.com/assets/3624786/2731491/c15cc804-c62d-11e3-8042-85bf96b3de7d.jpeg",
                "class": "absolute-element",
                "style": "position: absolute; max-height: none; max-width: none; width: 415px; height: 456px; z-index: 4; left: 240px; top: -10px;"
            }
        }]
    ]
}]